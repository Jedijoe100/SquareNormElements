# $Id$
Bug numbers refer to the BTS at http://pari.math.u-bordeaux.fr/Bugs/

Done for version 2.6.0 (released ??/??/20??):

  Fixed
    1- Euclidean chains were confused by t_POLs with t_INTMOD/t_POLMOD coeffs
       [ because a 0 polynomial could have lg() == 3 ]
    2- numerical instability in ellheightoo [#1204]
    3- Flm_gauss(m, smallish p): fix and enable the OK_ulong switch [ faster ]
    4- remi2n didn't allow negative arguments [native kernel] [#1215]
    5- ellrootno(e, p) started by computing a global minimal model for e
       instead of a local one at p.
    6- qfbred(t_QFR) wrong when frac( sqrt(D) ) > 0.5
    7- add GC in sumalt()
    8- problems with diagnostic messages when changing a 'default', e.g. \o3
    9- divru() could call bfffo(0) => overflow in expo()
AMe10- (t_FRAC<0) * t_INTMOD => wrong result
   11- trace(t_POL or t_SER) could yield an unormalized object [0 leading term]
LGr12- off-by-1 error in primepi() when argument is = primelimit
   13- bestappr(0.*x+1) -> incorrect object
   14- znlog(3, Mod(3,8), 2) -> error
   15- crash when default(prettyprinter,...) points to a non-existent command
   16- qfperfection(): wrong result in unlucky cases [#1223]
   17- allocatemem() did not reset parse error [#1226]
BA 18- (x->vector(1,j,x))(1) --> significant pointers lost [#1211]
VL 19- [makefile] Incorrect -I and -L flags order [#1212]
   20- nfbasis / nfdisc(f,, partial factorization) would sometimes spend a
       lot of time trying to factorize a discriminant [#1227]
   21- numerical instability in qfgaussred / qfsign [#1232]
   22- missing consistency checks in conjvec [#1231]
   23- numerical instability in polredabs [#1228, #1229]
   24- wrong result in bezoutres [#1233]
   25- wrong sign in polresultant() [#1234]
   26- change default(realprecision) so that it returns the internal precision
       [ as precision(1.) ], not the number of printed digits. [#1235]
   27- subst(Y/X,X,x) -> 0
PB 28- polrootsff(x^2-x-ffgen((v^2+1) * Mod(1,3))) -> SEGV [#1241]
   29- intnum(t=[0,0],[1],(sin(t)/t)^2) -> "precision too low in mpsc1"
BA 30- functions ending by the x[y]=z construct could corrupt the stack.
   31- nfbasis(pol, 0, factorization containing (-1)^1) -> wrong [#1244]
   32- qfminim(): better type checks for matrix entries
   33- qfminim(): incorrect GC in smallvectors()
   34- padicappr(x^2+1+O(3), -1+O(5^10)) --> no error
   35- tests test-kernel and test-ploth were broken
   36- lots of missing sanity checks in hilbert(x,y,p)
       [ e.g. hilbert(O(3), Pi, 5) -> 0 ]
BA 37- for(i=1,10^7,) + SIGINT -> SEGV [#1249]
   38- ellwp: take flag into account also for t_SER output [ was: numerical
       case only ]
   39- factor(p) was much slower than isprime(p) for p a "small" prime
BA 40- mateigen precision error was not trappable.
   41- accuracy problems in bnfisunit [#1253]
   42- broken rnfeltup [#1255]
   43- x===y was always wrong for x,y t_SER
BA 44- gamma(t_SER) with positive valuation did not work.
   45- ispower(x < 0) could return an even value ! [#1259]
   46- ispower(1 / n) return a wrong result [#1259]
BA 47- [breakloop] initial context could be lost.
BA 48- Ser([1+O(x)],x) returned an invalid object.
BA 49- ispseudoprime used too much stack for huge operands.
   50- [rnfidealup doc] idealgentoHNF() was incorrect.
DS 51- elldivpol returned wrong result for degree n >=8.
   52- overflow in mpbern(n) for huge n [#1256]
   53- idealfactor(nf, non integral ideal) would remove a rational content
       instead of factoring A/B with A,B coprime integer ideal. Which led
       to costly factorizations [#1158]
LGr54- the global variables associated to the primetable _maxprime / diffptr
       could become inconsistent
   55- psdraw() ignored plot colors
BA 56- stack_base() was not C89 standard compliant.
BA 57- my(f(x)=x+1);f --> SEGV                                       [#1273]
   58- ellheight([0, 0, 1, -1, 0], [0., 0.]) -> BUG
   59- allow bnrL1 over Q [#1279]
   60- factorpadic(,,,1) => SEGV when linear factors/Q [#1278]
   61- mathnf(..., 4) didn't remove 0 columns from HNF [#1271]
JD 62- possible SEGV in pari_init_opts [#1264]
BA 63- ellorder(E,P*Mod(1,p)) did not work if E was defined over Z.

  Changed
    1- mathnf: swapped flag 3 and 5.
    2- allow ellinit([a4,a6]) [#1213]
    3- ellinit(... singular curve ...]): return [] instead of raising an error
    4- GP set elements are no longer converted to t_STR (requiring "eval" to
       recover the underlying object). Arbitrary GENs can be stored in a set.
    5- moved Odos/* to relevant src/systems subdirectory
    6- removed Odos directory
    7- no longer allow Vec()/Vecrev(), Col(), Vecsmall(),  without argument.
       Use [], []~, Vecsmall([]), respectively.
    8- allow specifying an optional dimension in Vec/Vecrev, Col, Vecsmall.
    9- allow Vecsmall(t_POL or t_SER)
LGr10- nicer printout of small matrices: justify columns
   11- improve gmul(t_REAL, t_FRAC) when numerator of t_FRAC is 1
BA 12- [darwin] do not use dylib_ prefix to ld options [#1210]
   13- allow idealhnf(nf, t_QFI / t_QFR) for quadratic fields
   14- no longer allow 3 arguments in bestappr() [useless], no longer
       mix Pade approximants and continued fractions [too confusing: must a
       t_SER be converted to a t_RFRAC or be treated coefficientwise?]
   15- if znlog() has no solution, return [] instead of error
   16- znlog(x, g): no longer assume that g is a primitive root, nor that the
       underlying (Z/N)^* is cyclic
   17- renamed gen_eltorder -> gen_order
   18- logfile: strip properly color escape sequences [#1225]
   19- allow nfdisc / nfbasis(f,, p) for a p-adic discriminant / max. order
   20- first call isanypower() in BPSP_psp_nosmalldiv() when input is > 2^512
       [ < 1% of required time, 1 order of magnitude faster when it succeeds ]
       [ #1074 ]
   21- sort polroots() output so that it no longer depends on current precision
   22- delete README-subversion, replace with README-git
   23- move README.os2 to src/system/os2/README
   24- change compiler version printout in gp header
   25- much faster final divisibility test in nfgcd() [#1214]
   26- error type sqrter5 "not a quadratic residue in sqrt" now generalized
       to denote "not an n-th power residue in sqrtn"
BA 27- global_err_data is now a GEN.
BA 28- more usable form of alarm(s, code): evaluate code, aborting after s
       seconds. Return the result or a t_ERROR object.
   29- [non-Unix systems] the name of the preferences file is now "gprc.txt"
       (it remains ".gprc" on Unix systems)
   30- also look for the preferences file in PARI's "datadir"
   31- removed rootsold() code : polroots(x, 1) is now treated as polroots(x)
   32- rewrite ellan using C-longs + new function anellsmall()
   33- renamed all libpari error codes [ pari_err() arguments ]
   34- allow t_VECSMALL in vecextract
   35- look for a few more short vectors in polred(), only return subfields
       and the best primitive polynomial [wrt discriminant]
   36- [library] remove precdl argument in ellwp0: use a t_SER argument like
       in all other transcendental functions.
   37- ellsigma / ellzeta: allow t_SER arguments, like ellwp.
   38- polcoeff(x+2*y,1,y) -> 2  [ was 2*x^0 ]
   39- quadhilbert / quadray: replace final polredabs call by polredbest [#1025]
   40- listsort() now uses the cmp() comparison function, and becomes fully
       compatible with setsearch() [#1167]
   41- vecsort(,,2) [lexicographic order] is now always on. The flag is
       now deprecated and ignored.
   42- allow t_SER with integral coefficients to use asymptotically fast
       (ZX_mul / ZX_sqr) polynomial multiplication
LGr43- let initprimes0 use an existing prime table
   44- rename stackmalloc -> stack_malloc. Add stack_calloc
   45- matimagecompl() now returns a permutation (t_VECMALL) no longer a t_VEC
   46- remove config/gitversion from 'make snapshot' tarball

  Added
    1- mathnf for matrices over K[X] [#41]
BA  2- GP function ellheegner
BA  3- asm inline macro addllx8 for faster addition.
BA  4- Library function FpXQ_autpowers
    5- GP default 'linewrap'
    6- functions Fp_issquare, Fq_issquare.
    7- GP function cmp [ universal comparison ]
    8- library functions Fp_addmul, addmulii, addmulii_inplace, addmuliu,
       addmuliu_inplace, lincombii, mulsubii, submulii, submuliu,
       submuliu_inplace
LGr 9- Catalan's constant [ Catalan() ]
BA 10- library functions F2x_issquare/F2x_sqrt
BA 11- [INSTALL] Documentation of RUNTEST
   12- library function bestapprPade
   13- library function gen_factored_order, Fp_factored_order
   14- macros retmkvec, retmkvec2, retmkvec3, retmkvec4, retmkcol, retmkcol2,
       retmkmat, retmkmat2, retmkintmod, retmkpolmod
       retmkintmod, retmkpolmod, retconst_col, retconst_vec
   15- allow Ser(t_VECSMALL)
BA 16- library function gsprintf/gvsprintf
BA 17- new PARI type t_ERROR (error messages)
BA 18- new error trapping system and GP functions iferr,iferrname
BA 19- implement lngamma(t_PADIC)
LGr20- new PARI functions F2m_gauss, F2m_inv, F2m_rank, F2m_image, matid_F2m, F2m_mul,
       F2m_F2c_mul
BA 21- GP function getenv
   22- new error class e_PRIME [ pari_err() ]
BA 23- low-level function int_bit
   24- library function stack_strcat
   25- function polredbest [ adapting a preliminary patch by BA ]
BA 26- library functions Fl_invsafe, F2x_halfgcd, Flx_Flxq_eval and Flx_FlxqV_eval.
BA 27- support for sparse matrix and Wiedemann algorithm
   28- GP function vecsearch() [ use with vecsort() ]
BA 29- library function Z_issmooth
BA 30- linear sieve algorithm for Fp_log/znlog
BA 31- library functions Flx_to_FlxX, F2m_to_Flm, F2c_to_Flc, and Flxq_powu
   32- GP function idealnumden()
LGr33- library function uprecprime()
   34- library function ZM_pivots()
   35- library functions nm_Z_mul, ZM_togglesign, ZM_nm_mul [ to improve Zlm_gauss ]
BA 36- [breakloop] GP functions dbg_up/dbg_down (like gdb up/down).
   37- library functions rootsof1_Fp, rootsof1u_Fp, rootsof1_Fl
BA 38- GP function dbg_x (like \x)

  Removed
    1- dropped DOS support
    2- qfrep(): bit 2 of flag is now meaningless, we now always return a
       t_VECSMALL
    3- file language/errmsg.c and global errmessage[] array: all error
       messages are now part of pari_err_display())
    4- error types arither1,mattype1,notpoler (merged with typeer), matinv1
       (merged with gdiver)
    5- legacy lindep and PSLQ implementations [algdep/lindep with
       negative flags]: now use LLL in all cases.
BA  6- [libpari] removed unusable functions dbg_close/dbg_release.
