# $Id$
Bug numbers refer to the BTS at http://pari.math.u-bordeaux.fr/Bugs/

Done for version 2.8.0 (released ??/??/2014):

  Fixed
    1- make install fails on OS/X: ln -s libpari.dylib libpari.dylib fails
    2- Q_pvalrem(t_FRAC) => wrong result
    3- [] == 0 but []~ != 0  (now []~ == 0 as well) [#1560]
BA  4- test-kernel did not work when using --mt=pthread
BA  5- ellheegner was using too much memory in some case
    6- ellap can overflow on 32-bit machine [#1558]
       ellap(ellinit([582304190,64196421]),2147438927) -> overflow
       ellap(ellinit([-1137195,489565862]),2038074751) -> wrong result
    7- nfhilbert(K,x,y, P above 2) could give wrong results [#1561]

  Added
    1- add optional argument to sumdigits to specify the base
    2- [libpari] bits_to_int,bits_to_u,binary_zv,binary_2k,binary_2k_zv
BA  3- [GP] support for variadic GP functions (f(v[..])=expr)
    4- nfeltval(K, x, pr, &y) now takes an optional 4th argument, containing
       the part of x coprime to pr.
BA  5- [libpari] New functions family RgXn: new functions RgXnV_red_shallow,
       RgXn_powers, RgX_RgXnV_eval, RgX_RgXn_eval, RgXn_reverse, RgXn_inv,
       RgXn_exp
BA  6- [libpari] New functions Flv_inv
BA  7- [libpari] New functions Flx_Flv_eval, Flv_FlvV_polint

  Changed
    1- make log(+/-I) return (+/-)Pi/2*I with gen_0 real part [#1556]
BA  2- [libpari] rename RgX_mullow -> RgXn_mul, RgX_sqrlow -> RgXn_sqr,
    RgX_modXn_eval -> RgXn_eval, RgX_modXn_shallow-> RgXn_red_shallow
