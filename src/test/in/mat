Mat([1]) + matrix(0,1)
1/matrix(2,2,i,j,Mod(0, 2))
test(n)=
{
  until(matrank(M)==n,M=matrix(n,n,i,j,random(Mod(1,2))));
  if(M^-1*M!=matid(n),error("F2m"));
}
test(200)
test(2)

default(realprecision,38);
h=mathilbert(40);
[Q,R] = matqr(h); vecmax(abs(h-Q*R)) < 1e-37
[q,R] = matqr(h,1); vecmax(abs(mathouseholder(q,h)-R)) < 1e-37
Mat(List())
Mat(List([1]))
Mat([[1,2,3],[2,3,4]]~)
Mat(Qfb(1,2,5))
matdiagonal(matid(2))
matdiagonal([1,2;3,4])
matpascal(4,1/2)
A=[1,2,3;4,5,6];B=[4,6;10,12]
matinverseimage(A,B)
matinverseimage(A*Mod(1,2),B)
matinverseimage(A*Mod(1,7),B)
matinverseimage(A*Mod(1,2^64+13),B)
matinverseimage(A*Mod(1,3037000507),B)
B=[4,10]~;
matinverseimage(A*Mod(1,2),B)
matinverseimage(A*Mod(1,7),B)
matinverseimage(A*Mod(1,2^64+13),B)
matinverseimage(A*Mod(1,3037000507),B)

A = [1,2,4;2,12,7;2,9,11];
test(f)=
{
  print(f,":");
  print(f(A*Mod(1,2)));
  print(f(A*Mod(1,7)));
  print(f(A*Mod(1,3037000507)));
  print(f(A*Mod(1,2^64+13)));
}
test(matdet);
test(matrank);
test(matadjoint);
test(matimage);
test(matimagecompl);
test(matindexrank);
test(matker);
test(lindep);
test(x->x^(-1));
test(x->x^2);
test(x->A*x);

matdet([0,1,0;1,0,1;2,0,3]*Mod(1,2^64+13))

trace(matid(3))
trace([;])
trace(Mat([1,2]))
matrixqz([1/3,1/4;1/2,1/3])
matrixqz(matrix(2,2),-1)
