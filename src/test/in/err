f(x) = 1/x;
g(N) = for(i = -N, N, f(i));
g(10)
print();

f=matsolve;
f(Mat(0), Col(1))
print();

(matsolve)(Mat(0), Col(1))
print();

a.foo=1/(1+a^2);
g(x)=[x.foo];
g(I)
print();

(x->1/x)(0)
print();

ecm(N,t,B)=
{
  for(a=1,t,
     iferr(
       my(E=ellinit([0,0,0,a,1]*Mod(1,N)));
       ellmul(E,[0,1]*Mod(1,N),B),
       err,if(errname(err)=="e_INV",return(gcd(lift(component(err,2)),N)),error(err))));
}
ecm(2^64+1,10,200!)
ecm2(N,t,B)=
{
  for(a=1,t,
     iferrname("e_INV",
       my(E=ellinit([0,0,0,a,1]*Mod(1,N)));
       ellmul(E,[0,1]*Mod(1,N),B),
       err,my(d=gcd(lift(component(err,2)),N));if(d>1,return(d))));
}
ecm2(2^64+1,10,200!)
\\ e_COPRIME
T=t^2-2;p=2;A=x^2+1;B=[x+t,x+t];r=polhensellift(A,B,[p,T],6)
\\ e_DIM / e_TYPE
M = matid(2);
M[,1] = 1
M[,3] = 1
M[,1] = [1,2]
M[,1] = [1,2,3]~
M[1,] = 1
M[3,] = 1
M[1,] = [1,2]~
M[1,] = [1,2,3]

[;][1,]
[;][,1]
1[1]
issquare(1,&v[1])
1[1,1]
1[,1]
issquare(1,&v[,1])
1[1,]
issquare(1,&v[1,])

v=Vecsmall([1]);
v[2] = 1
v[1] = Pi
v[1] = 2^64
v[Pi] = 1

\\ RgM_check_ZM
M = [1.,0;0,1]; qflll(M,1)
\\ RgV_check_ZV
addprimes(1.)

\\e_MODULUS
nfalgtobasis(nfinit(t^3-2),Mod(t,t^2+1))
\\e_DIM
vector(-1,i,0)
vectorv(-1,i,0)
vectorsmall(-1,i,0)
matrix(-1,1,i,j,0)
matrix(1,-1,i,j,0)

next(-1)
break(-1)
v[-1]
v[#v+1]
subst(x,1,0)
exp(1/x)
cos(1/x)
sin(1/x)
tan(1/x)
cotan(1/x)
atan(1/x)
asin(1/x)
acos(1/x)
asinh(1/x)
acosh(1/x)
atanh(1/x)
lngamma(x)
besselj(2,1/x)
besseljh(2,1/x)
besselk(2,1/x)
besselk(1/3,O(x))
besseln(2,1/x)
besseln(1/3,O(x))
polylog(2,1/x)
sqrt(x)
sqrt(2+O(2^2))
sqrtn(x,3)
sqrtn(2+O(2^2),3)
log(x)
log(0)
abs(x+O(x^2))
vecmax([])
vecmax([], &i)
vecmin([])
vecmmin([], &i)
vecmax(matrix(0,2))
L=List();
listput(L, x, -1)
listinsert(L,x,-1)
listinsert(L,x,10)
listpop(L)
ellj(Mod(1,2))
ellj(Qfb(1,1,1))
eta(1+O(2))
eta(1/x)
K = nfinit(x^2+1);
idealhnf(K, Qfb(1,1,1))
idealfactor(K, [;])
idealval(K, [;], idealprimedec(K,2)[1]);
idealdiv(K,2,0, 1);
valuation(Pi,2)
