  ***   Warning: new stack size = 100000000 (95.367 Mbytes).

[-2]


[3 -2]

[0 -2]


[3  1  1]

[0 -2  0]

[0  0 -2]


[1 0]

[0 1]

0
1/2
[1/4, -1/2, -1/2]
-1/2
[[[0, 6; 2, -5; 4, 8; 0, -3; -1, 4; -2, 2; -1, -2; 1, -4; 1, 2; 0, 3; -4, 1;
 -4, -5; -4, -8; -1, 7; -2, 8; 1, 2; -1, 4; 3, 0; 0, 3; 0, -3], [-5, -6; -2,
 0], -12, Vecsmall([1, 2])], [[0, 0; 0, 0; 0, 0; -1, 1; 1, -1; 0, 0; -1, 1; 
0, 1; 0, 0; 0, -1; 0, 1; -1, 1; -1, 0; 0, 1; 0, 1; 0, 0; 0, 1; 0, -1; 0, 1; 
0, -1], [1, -1; 0, -1], -1, Vecsmall([4, 8])], [[0, -4; 0, -2; 0, -4; 0, 6; 
1, -3; 0, -4; -1, 3; 1, -3; 1, 1; 0, 2; 0, -2; 0, -2; 0, 4; -1, -3; 0, -4; -
1, -1; 1, -3; -1, -1; 2, 0; 0, 2], [-3, 4; -1, 0], 4, Vecsmall([1, 5])], [[0
, 0, 0; 3, 0, -1; 2, 1, 2; 0, 0, -2; -2, 2, 1; -6, 0, 2; 0, 0, -2; 2, 1, 1; 
-1, -2, 2; 4, 2, -2; -4, -2, 2; -4, -2, 1; 0, 0, -1; -4, -2, 2; -1, 1, 2; -3
, -3, 0; -3, 0, 0; 3, 0, 0; 0, 3, 0; 0, 0, 1], [-2, 0, 1; 4, -6, -8; 0, 0, 3
], -6, Vecsmall([2, 3, 4])], [[16, 22, 92, 2, 110, 334, 378, 194, -386, -54;
 0, 113, 0, -113, 113, 113, 339, 113, 113, 0; 0, 0, 0, 0, 226, 452, 452, 226
, -452, 0; 0, -113, 113, 113, -113, -565, -791, -339, 339, 0; 113, 113, 0, -
113, -113, 113, 339, 113, -339, 0; 0, -113, 226, 113, 339, 339, 113, 113, -5
65, -113; 113, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 113, 0, -113, -113, -791, -565,
 -339, 113, 0; 0, 0, 0, 0, 226, 904, 904, 452, -452, 0; 0, 0, -113, -226, -2
26, -678, -678, -452, 1130, 0; 0, 0, 339, 226, 678, 678, 226, 226, -1130, -2
26; 0, -226, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -113, 0, 0, 0, 0, 0, 0, 0; 0, 0, 
0, -226, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, -226, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -
452, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -452, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -226,
 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -452, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -113], [0
, 0, 0, 0, 0, 0, 24, 0, 0, 0; 0, 8, 4, 12, 8, -24, -8, -4, 0, 12; 0, 16, 8, 
24, 16, 0, -16, -8, 0, 0; -339, 68, -176, -96, 104, 162, -56, -40, -48, 0; 0
, 4, 8, 0, -8, 0, 8, 4, 0, 0; 0, -2, 14, 12, 10, -12, -10, -8, 6, 6; -339, 7
0, -166, -96, 112, 174, -64, -38, -42, -6; 678, -132, 300, 168, -240, -324, 
144, 84, 72, 0; 0, 4, -4, 0, -2, 0, 2, -2, 0, 0; 0, 16, 56, 48, 16, -24, -16
, -8, 0, 0], 2712, Vecsmall([1, 2, 3, 4, 5, 6, 7, 8, 10, 11])]]
[154, 24]
x^2 - 9*x + 8
x^4 - 54*x^3 + 333*x^2 + 10692*x + 39204
x^3 - 84*x^2 + 2352*x - 21952
x^6 - 22*x^5 + 153*x^4 - 316*x^3 - 140*x^2 + 576*x + 324
x^4 - 113*x^3 - 1872*x^2 - 6208*x + 8192
[[[+oo, 0], [0, 1]], [[[[1, 1; [1, 1; 0, 1], -1], 1], [1, 2]], [[[1, 1; [1, 
-1; 2, -1], 1], 2]]]]
[Mat([[1, 0; 0, 1], 1]), 0]
[0, Mat([[1, 0; 0, 1], 1])]
[Mat([[1, 1; 2, 3], -1]), 0]
[0, 0]
[32/5*x^5 - 8*x^3 + 8/5*x, 32*x^4 + 64*x^3 + 40*x^2 + 8*x]
0
32/5*x^5 - 8*x^3 + 8/5*x
32*x^4 + 64*x^3 + 40*x^2 + 8*x
[[[1, 1; -5, 0; 0, -5], [0, -1; 5, 1], 5, Vecsmall([1, 2])], [[1; 0; 0], Mat
(1), 1, Vecsmall([1])]]
1
1
[Mod(1, x^2 + x - 1), Mod(x, x^2 + x - 1), Mod(-2*x - 1, x^2 + x - 1), Mod(-
x - 1, x^2 + x - 1), Mod(2*x, x^2 + x - 1), Mod(x - 2, x^2 + x - 1), Mod(2*x
 + 2, x^2 + x - 1), Mod(-2*x - 1, x^2 + x - 1), Mod(2, x^2 + x - 1), Mod(-2*
x + 2, x^2 + x - 1), Mod(-2*x - 4, x^2 + x - 1), Mod(x + 3, x^2 + x - 1), Mo
d(3, x^2 + x - 1), Mod(2, x^2 + x - 1), Mod(2*x - 4, x^2 + x - 1), Mod(3*x, 
x^2 + x - 1), Mod(-2*x + 2, x^2 + x - 1), Mod(2*x, x^2 + x - 1), Mod(-2, x^2
 + x - 1), Mod(-2, x^2 + x - 1), Mod(-2*x - 6, x^2 + x - 1), Mod(-2*x - 2, x
^2 + x - 1), Mod(1, x^2 + x - 1), Mod(5, x^2 + x - 1), Mod(-4*x - 1, x^2 + x
 - 1), Mod(3*x, x^2 + x - 1), Mod(2*x + 1, x^2 + x - 1), Mod(-2*x - 4, x^2 +
 x - 1), Mod(-3, x^2 + x - 1), Mod(-6*x + 2, x^2 + x - 1)]
[Mod(1, x^2 + x - 1), Mod(x, x^2 + x - 1), Mod(-2*x - 1, x^2 + x - 1), Mod(-
x - 1, x^2 + x - 1), Mod(2*x, x^2 + x - 1), Mod(x - 2, x^2 + x - 1), Mod(2*x
 + 2, x^2 + x - 1), Mod(-2*x - 1, x^2 + x - 1), Mod(2, x^2 + x - 1), Mod(-2*
x + 2, x^2 + x - 1), Mod(-2*x - 4, x^2 + x - 1), Mod(x + 3, x^2 + x - 1), Mo
d(3, x^2 + x - 1), Mod(2, x^2 + x - 1), Mod(2*x - 4, x^2 + x - 1), Mod(3*x, 
x^2 + x - 1)]
[[1, -2, 0, 2, -2, 0, -2, 0, 0, 4, 4, 0, 2, 4, 0, -4], [1, -1, 0, -1, 2, 0, 
4, 3, 0, -2, -4, 0, 2, -4, 0, -1], [1, -1, 0, -1, 3, 0, -3, 3, 0, -3, 0, 0, 
4, 3, 0, -1], [1, 1, 0, -1, -2, 0, 4, -3, 0, -2, 4, 0, 2, 4, 0, -1], [1, 1, 
0, -1, 1, 0, -5, -3, 0, 1, 4, 0, -4, -5, 0, -1], [1, 2, 0, 2, 0, 0, 0, 0, 0,
 0, 6, 0, 4, 0, 0, -4]]

[1 0 0 0 0 0]

[0 1 0 0 0 0]

[0 0 1 0 0 0]

[0 0 0 1 0 0]

[0 0 0 0 1 0]

[0 0 0 0 0 1]

1

[ 1 -1/3    0  4  -2   1]

[ 0    0    0 12  -6   3]

[ 6   -3    0 78 -36  16]

[ 3  1/3 -1/2 18  -7 5/2]

[12    2   -2 60 -23   8]

[12    3   -2 48 -18   6]

1

[  3    0 -1/3   24  -10   4]

[  0    0    0  -18    6  -2]

[ 24    0   -3  288 -120  48]

[ -2 -1/2  1/3  -32   13  -5]

[-12   -2    2 -180   73 -28]

[-18   -2    3 -252  102 -39]

1

[ 1 0 0   10  -4   5/3]

[-6 0 1  -60  24    -9]

[ 6 1 0  150 -60    24]

[ 0 0 0  -24  10 -25/6]

[ 0 0 0 -120  49   -20]

[ 0 0 0 -150  60   -24]

1
  ***   at top-level: msatkinlehner(W,4)
  ***                 ^------------------
  *** msatkinlehner: domain error in msatkinlehner: N % Q != 0

[1 0 0    0   0   0]

[0 1 0    0   0   0]

[0 0 1 -144  60 -24]

[0 0 0   25 -10   4]

[0 0 0  120 -49  20]

[0 0 0  144 -60  25]

1
1
0
1
[[Mat([[1, 0; 0, 1], 1]), 0, 0, 0, 0], [0, Mat([[1, 0; 0, 1], 1]), 0, 0, 0],
 [0, 0, Mat([[1, 0; 0, 1], 1]), 0, 0], [0, 0, 0, Mat([[1, 0; 0, 1], 1]), 0],
 [0, 0, 0, 0, Mat([[1, 0; 0, 1], 1])]]
1
1
1
1
4
1
1
2
2
2
2
4
1
1
1
1
1
1
1
1
1
1
1
1
2
Total time spent: 10196
