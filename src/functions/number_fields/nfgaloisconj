Function: nfgaloisconj
Section: number_fields
C-Name: galoisconj0
Prototype: GD0,L,DGp
Help: nfgaloisconj(nf,{flag=0},{d}): list of conjugates of a root of the
 polynomial x=nf.pol in the same number field. flag is optional (set to 0 by
 default), meaning 0: use combination of flag 4 and 1, always complete; 1:
 use nfroots; 2 : use complex numbers, LLL on integral basis (not always
 complete); 4: use Allombert's algorithm, complete if the field is Galois of
 degree <= 35 (see manual for details). nf can be simply a polynomial.
Doc: $\var{nf}$ being a number field as output by \kbd{nfinit}, computes the
 conjugates of a root $r$ of the non-constant polynomial $x=\var{nf}[1]$
 expressed as polynomials in $r$. This also makes sense when the number field
 is not \idx{Galois} since some conjugates may lie in the field.
 $\var{nf}$ can simply be a polynomial.
  
 If no flags or $\fl=0$, use a combination of flag $4$ and $1$ and the result
 is always complete,
 
 If $\fl=1$, use \kbd{nfroots}.
 
 If $\fl=2$ (OBSOLETE), use complex approximations to the roots and an integral
 \idx{LLL}. The result is not guaranteed to be complete: some
 conjugates may be missing (a warning is issued if the result is not proved
 complete), especially so if the corresponding polynomial has a huge index,
 and increasing the default precision may help. This variant is slow and
 unreliable: don't use it.
 
 If $\fl=4$, use Allombert's algorithm and permutation testing. If the
 field is Galois with weakly super-solvable Galois group, return
 the complete list of automorphisms, else only the identity element. If
 present, $d$ is assumed to be a multiple of the least common
 denominator of the conjugates expressed as polynomial in a root of
 \var{pol}.
 
 A group G is weakly super-solvable (WKSS) if it contains a super-solvable
 normal subgroup $H$ such that $G/H$ is trivial or isomorphic to $A_4$
 or $S_4$. Abelian and nilpotent groups are WKSS. In practice, almost all
 small groups are WKSS, the exceptions having order 36(1 exception), 48(2),
 56(1), 60(1), 72(5), 75(1), 80(1), 96(10) and $\geq 108$.
 
 Hence $\fl = 4$ permits to quickly check whether a polynomial of order
 strictly less than $36$ is Galois or not. (Note that the result is rigorous,
 whereas factorisations modulo small primes are not enough when the
 polynomial is indeed Galois.) This method is much faster than \kbd{nfroots}
 and can be applied to polynomials of huge degree.
 
 This routine can only compute $\Q$-automorphisms, but it may be used to get
 $K$-automorphism for any base field $K$ as follows:
 \bprog
 rnfgaloisconj(nfK, R) = \\ K-automorphisms of L = K[X] / (R)
 { my(polabs, N, H);
   R *= Mod(1, nfK.pol);             \\ convert coeffs to polmod elts of K
   polabs = rnfequation(nfK, R);
   N = nfgaloisconj(polabs) % R;     \\ Q-automorphisms of L
   H = [];
   for(i=1, #N,                      \\ select the ones that fix K
     if (subst(R, variable(R), Mod(N[i],R)) == 0,
       H = concat(H, N[i])
     )
   ); H
 }
 K  = nfinit(y^2 + 7);
 polL = x^4 - y*x^3 - 3*x^2 + y*x + 1;
 rnfgaloisconj(K, polL)             \\ K-automorphisms of L
 @eprog

Variant:
 \fun{long}{numberofconjugates}{GEN T, long pinit} returns a quick
 multiple for the number of  $\Q$-automorphism of the (integral, monic)
 \typ{POL} $T$, from modular factorizations, starting from prime \kbd{pinit}
 (you can set it to $2$). This upper bounds almost always coincides with the
 number of conjugates.
