Function: bnfclassunit
Section: number_fields
C-Name: bnfclassunit0
Prototype: GD0,L,DGp
Help: bnfclassunit(P,{flag=0},{tech=[]}): compute the class group, regulator
 of the number field defined by the polynomial P, and also the fundamental
 units if they are not too large. flag and tech are both optional. flag can
 be any of 0: default, 1: insist on having fundamental units, 2: do not
 compute units. See manual for details about tech. P may also be a non-zero
 integer, and is then considered as the discriminant of a quadratic order
Doc: \emph{this function is DEPRECATED, use \kbd{bnfinit}}.
 
 \idx{Buchmann}'s sub-exponential algorithm for computing the class group, the
 regulator and a system of \idx{fundamental units} of the general algebraic
 number field $K$ defined by the irreducible polynomial $P$ with integer
 coefficients.
 
 The result of this function is a vector $v$ with many components, which for
 ease of presentation is in fact output as a one column matrix. It is
 \emph{not} a $\var{bnf}$, you need \kbd{bnfinit} for that. First we describe
 the default behaviour ($\fl=0$):
 
 $v[1]$ is equal to the polynomial $P$.
 
 $v[2]$ is the 2-component vector $[r1,r2]$, where $r1$ and $r2$ are as usual
 the number of real and half the number of complex embeddings of the number
 field $K$.
 
 $v[3]$ is the 2-component vector containing the field discriminant and the
 index.
 
 $v[4]$ is an integral basis in Hermite normal form.
 
 $v[5]$ (\kbd{$v$.clgp}) is a 3-component vector containing the class number
 (\kbd{$v$.clgp.no}), the structure of the class group as a product of cyclic
 groups of order $n_i$ (\kbd{$v$.clgp.cyc}), and the corresponding generators
 of the class group of respective orders $n_i$ (\kbd{$v$.clgp.gen}).
 
 $v[6]$ (\kbd{$v$.reg}) is the regulator computed to an accuracy which is the
 maximum of an internally determined accuracy and of the default.
 
 $v[7]$ is deprecated, maintained for backward compatibility and always equal
 to $1$.
 
 $v[8]$ (\kbd{$v$.tu}) a vector with 2 components, the first being the number
 $w$ of roots of unity in $K$ and the second a primitive $w$-th root of unity
 expressed as a polynomial.
 
 $v[9]$ (\kbd{$v$.fu}) is a system of fundamental units also expressed as
 polynomials.
 
 If $\fl=1$, and the precision happens to be insufficient for obtaining the
 fundamental units, the internal precision is doubled and the computation
 redone, until the exact results are obtained. Be warned that this can take a
 very long time when the coefficients of the fundamental units on the integral
 basis are very large, for example in large real quadratic fields.
 For this case, there are alternate compact representations for algebraic
 numbers, implemented in PARI but currently not available in GP.
 
 If $\fl=2$, the fundamental units and roots of unity are not computed.
 Hence the result has only 7 components, the first seven ones.
