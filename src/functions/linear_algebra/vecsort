Function: vecsort
Section: linear_algebra
C-Name: vecsort0
Prototype: GDGD0,L,
Help: vecsort(x,{k},{flag=0}): sorts the vector of vectors (or matrix) x in
 ascending order, according to the value of its k-th component if k is not
 omitted. Binary digits of flag (if present) mean: 1: indirect sorting,
 return the permutation instead of the permuted vector, 2: sort using
 lexicographic order, 4: use descending instead of ascending order, 8: remove
 duplicate entries
Description: 
 (vec):vec	sort($1)
 (vec, gen):vec	vecsort0($1, $2, 0)
 (vec, , 0):vec	sort($1)
 (vec, , 1):vec	indexsort($1)
 (vec, , 2):vec	lexsort($1)
 (vec, , small):vec	vecsort0($1, NULL, $3)
 (vec, gen, small):vec	vecsort0($1, $2, $3)
Doc: sorts the vector $x$ in ascending order, using a mergesort method.
 $x$ must be a vector, and its components integers, reals, or fractions.
 
 If $k$ is present and is an integer, sorts according to the value of the
 $k$-th subcomponents of the components of~$x$. Note that mergesort is
 stable, hence the initial ordering of "equal" entries (with respect to
 the sorting criterion) is not changed.
 
 $k$ can also be a vector, in which case the sorting is done lexicographically
 according to the components listed in the vector $k$. For example, if
 $k=[2,1,3]$, sorting will be done with respect to the second component, and
 when these are equal, with respect to the first, and when these are equal,
 with respect to the third.
 
 \noindent The binary digits of \fl\ mean:
 
 \item 1: indirect sorting of the vector $x$, i.e.~if $x$ is an
 $n$-component vector, returns a permutation of $[1,2,\dots,n]$ which
 applied to the components of $x$ sorts $x$ in increasing order.
 For example, \kbd{vecextract(x, vecsort(x,,1))} is equivalent to
 \kbd{vecsort(x)}.
 
 \item 2: sorts $x$ by ascending lexicographic order (as per the
 \kbd{lex} comparison function).
 
 \item 4: use descending instead of ascending order.

 \item 8: remove "duplicate" entries with respect to the sorting function
 (keep the first occuring entry). If $k$ is given, entries having the same
 $k$-th component as a given one are deleted:
 \bprog
   ? vecsort([[1,2],[0,2]], 2, 8)
   %1 = [[1, 2]]
 @eprog
