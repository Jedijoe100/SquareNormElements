Function: qflll
Section: linear_algebra
C-Name: qflll0
Prototype: GD0,L,p
Help: qflll(x,{flag=0}): LLL reduction of the vectors forming the matrix x
 (gives the unimodular transformation matrix). The columns of x must be
 linearly independent, unless specified otherwise below. flag is optional, 
 and can be 0: default, 1: assumes x is integral, columns may be dependent, 2:
 assumes x is integral, returns a partially reduced basis, 4: assumes x is 
 integral, returns [K,I] where K is the integer kernel of x and I the LLL
 reduced image, 5: same as 4 but x may have polynomial coefficients, 8: same
 as 0 but x may have polynomial coefficients
Description: 
 (vec, ?0):vec:prec	lll($1, prec)
 (vec, 1):vec	lllint($1)
 (vec, 2):vec	lllintpartial($1)
 (vec, 4):vec	lllkerim($1)
 (vec, 5):vec	lllkerimgen($1)
 (vec, 8):vec	lllgen($1)
 (vec, #small):vec	$"Bad flag in qflll"
 (vec, small):vec:prec	qflll0($1, $2, prec)
Doc: \idx{LLL} algorithm applied to the
 \emph{columns} of the matrix $x$. The columns of $x$ must be linearly
 independent, unless specified otherwise below. The result is a unimodular
 transformation matrix $T$ such that $x \cdot T$ is an LLL-reduced basis of
 the lattice generated by the column vectors of $x$.
 
 If $\fl=0$ (default), the computations are done with floating point numbers,
 using Householder matrices for orthogonalization. If $x$ has integral
 entries, then computations are nonetheless approximate, with precision
 varying as needed (Lehmer's trick, as generalized by Schnorr).
 
 If $\fl=1$, it is assumed that $x$ is integral. The computation is done
 entirely with integers. In this case, $x$ needs not be of maximal rank, but
 if it is not, $T$ will not be square. This is slower and no more
 accurate than $\fl=0$ above if $x$ has small dimension (say $100$ or less).
 
 If $\fl=2$, $x$ should be an integer matrix whose columns are linearly
 independent. Returns a partially reduced basis for $x$, using an unpublished
 algorithm by Peter Montgomery: a basis is said to be \emph{partially reduced}
 if $|v_i \pm v_j| \geq |v_i|$ for any two distinct basis vectors $v_i, \,
 v_j$.
 
 This is significantly faster than $\fl=1$, esp. when one row is huge compared
 to the other rows. Note that the resulting basis is \emph{not} LLL-reduced in
 general.
 
 If $\fl=4$, $x$ is assumed to have integral entries, but needs not be of
 maximal rank. The result is a two-component vector of matrices: the
 columns of the first matrix represent a basis of the integer kernel of $x$
 (not necessarily LLL-reduced) and the second matrix is the transformation
 matrix $T$ such that $x\cdot T$ is an LLL-reduced $\Z$-basis of the image
 of the matrix $x$.
 
 If $\fl=5$, case as case $4$, but $x$ may have polynomial coefficients.
 
 If $\fl=8$, same as case $0$, but $x$ may have polynomial coefficients.
 
 \syn{qflll0}{x,\fl,\var{prec}}. Also available are
 \funs{lll}{x,\var{prec}} ($\fl=0$), \funs{lllint}{x} ($\fl=1$), and
 \funs{lllkerim}{x} ($\fl=4$).

