Function: ellap
Section: elliptic_curves
C-Name: ellap0
Prototype: GGD0,L,
Help: ellap(E,p,{flag=0}): computes a_p for the elliptic curve E using
 Shanks-Mestre's method. flag is optional and can be set to 0 (default) or 1
 (use Jacobi symbols)
Doc: computes the $a_p$ corresponding to the
 elliptic curve $E$ and the prime number $p$. These are defined by the
 equation $\#E(\F_p) = p+1 - a_p$, where $\#E(\F_p)$ stands for the number
 of points of the curve $E$ over the finite field $\F_p$. When $\fl$ is $0$,
 this uses the baby-step giant-step method and a trick due to Mestre. This
 runs in time $O(p^{1/4})$ and requires $O(p^{1/4})$ storage, hence becomes
 unreasonable when $p$ has about 30 digits.
 
 If $\fl$ is $1$, computes the $a_p$ as a sum of Legendre symbols. This is
 slower than the previous method as soon as $p$ is greater than 100, say.
 
 No checking is done that $p$ is indeed prime. $E$ must be an \var{sell} as
 output by \kbd{ellinit}, defined over $\Q$, $\F_p$ or $\Q_p$. $E$ must be
 given by a Weierstrass equation minimal at $p$.
 
 \syn{ellap0}{E,p,\fl}. Also available are \funs{apell}{E,p}, corresponding
 to $\fl=0$, and \funs{apell2}{E,p} ($\fl=1$).
