Function: iferrname
Section: programming/control
C-Name: iferrnamepari
Prototype: sEVE
Help: iferrname(str,seq1,E,seq2): evaluates the expression sequence seq1. If
 an error of type str occurs, seq2 is evaluated with the formal parameter E
 set to the error data.
Doc: evaluates the expression sequence \var{seq1}. If an error of type
 \var{str} occurs, \var{seq2} is evaluated with the formal parameter \var{E}
 set to the error data.
 The following uses \kbd{iferrname} to implement Lenstra's ECM factoring method:
 \bprog
 ? ecm(N, B = 1000!, t = 100)=
   {
     for(a = 1, t,
       iferrname("e_INTMOD",
         ellpow(ellinit([a,1]*Mod(1,N)), [0,1]*Mod(1,N), B),
         E, return(gcd(lift(component(E,1)),N))));
   }
 ? ecm(2^101-1)
 %2 = 7432339208719
 @eprog
 The return value of \kbd{iferrname} itself is the value of \var{seq2} if an
 error occurs, and the value of \var{seq1} otherwise. We now describe the
 list of valid error types, and the associated error data \var{E}; in each
 case, we list in order the components of \var{E}, accessed via
 \kbd{component(E,1)}, \kbd{component(E,2)}, etc.

  \item \kbd{"e\_ALARM"}. A timeout, generated by the \tet{alarm} function.
  \var{E} has one component (\typ{STR}): the error message to print.

  \item \kbd{"e\_FILE"}. Error while trying to open a file.
  \var{E} has two components, 1 (\typ{STR}): the file type (input, output,
  etc.), 2 (\typ{STR}): the file name.

  \item \kbd{"e\_MISC"}. Generic uncategorized error.
  \var{E} has one component (\typ{STR}): the error message to print.

  \item \kbd{"e\_FLAG"}. A flag argument is out of bounds in function $s$.
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_IMPL"}. A requested feature $s$ is not implemented.
  \var{E} has one component, 1 (\typ{STR}): the feature name $s$.

  \item \kbd{"e\_ARCH"}. A requested feature is not available on this
  architecture or operating system.
  \var{E} has no component.

  \item \kbd{"e\_NOTFUNC"}. Generated by the PARI evaluator; tried to use a
 \kbd{GEN} $x$ which is not a \typ{CLOSURE} in a function call syntax (as in
 \kbd{f = 1; f(2);}).
  \var{E} has one component, 1: the offending \kbd{GEN} $x$.

  \item \kbd{"e\_PREC"}. Function $s$ fails because input accuracy is too low.
  (As in \kbd{floor(1e100)} at default accuracy.)
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_TYPE"}. An argument $x$ of function $s$ had an unexpected type.
  (As in \kbd{factor("blah")}.)
  \var{E} has two components, 1 (\typ{STR}): the function name $s$,
  2: the offending argument $x$.

  \item \kbd{"e\_DIM"}. The dimensions of arguments $x$ and $y$ submitted
  to function $s$ does not match up.
  E.g., multiplying matrices of inconsistent dimension, adding vectors of
  different lengths,\dots
  \var{E} has three component, 1 (\typ{STR}): the function name $s$, 2: the
  argument $x$, 3: the argument $y$.

  \item \kbd{"e\_VAR"}. The variables of arguments $x$ and $y$ submitted
  to function $s$ does not match up. E.g., considering the algebraic number
  \kbd{Mod(t,t\pow2+1)} in \kbd{nfinit(x\pow2+1)}.
  \var{E} has three component, 1 (\typ{STR}): the function name $s$, 2
  (\typ{POL}): the argument $x$, 3 (\typ{POL}): the argument $y$.

  \item \kbd{"e\_USER"}. A user error, as triggered by
  \tet{error}($g_1,\dots,g_n)$.
  \var{E} has one component, 1 (\typ{VEC}): the vector of $n$ arguments given
  to \kbd{error}.

  \item \kbd{"e\_STACK"}. The PARI stack overflows.
  \var{E} has no component.

  \item \kbd{"e\_OVERFLOW"}. An object in function $s$ becomes too large to be
  represented within PARI's hardcoded limits. (As in \kbd{2\pow2\pow2\pow10} or
  \kbd{exp(1e100)}, which overflow in \kbd{lg} and \kbd{expo}.)
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_MAXPRIME"}. A function using the precomputed list of prime
  numbers ran out of primes.
  \var{E} has one component, 1 (\typ{INT}): the requested prime bound, which
  overflowed \kbd{primelimit} or $0$ (bound is unknown).

  \item \kbd{"e\_INTMOD"}. Tried to invert a non-invertible \typ{INTMOD}
  \kbd{Mod($a$,$b$)}. Provided $a$ is not $0$ mod $b$, this allows to factor
  the modulus, as \kbd{gcd($a$,$b$)} is a non-trivial divisor of $b$.
  \var{E} has one component, 1 (\typ{INTMOD}): the element
  \kbd{Mod($a$,$b$)}.

  \item \kbd{"e\_CONSTPOL"}. An argument of function $s$ is a constant
  polynomial, which does not make sense. (As in \kbd{galoisinit(Pol(1))}.)
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_IRREDPOL"}. Function $s$ expected an irreducible polynomial,
  and did receive $T$, which was not. (As in \kbd{nfinit(x\pow2-1)}.)
  \var{E} has two component, 1 (\typ{STR}): the function name $s$,
  2 (\typ{POL}): the polynomial $x$.

  \item \kbd{"e\_ZEROPOL"}. An argument of function $s$ is a zero polynomial,
  which does not make sense. (As in \kbd{polroots(0)}.)
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_OP"}. Impossible operation between two objects than cannot
  be typecast to a sensible common domain for deeper reasons than a type
  mismatch, usually for arithmetic reasons. As in \kbd{O(2) + O(3)} : it is
  valid to add two \typ{PADIC}s, provided the underlying prime is the same; so
  the addition is not forbidden a priori for type reasons, it only becomes so
  when inspecting the objects and trying to perform the operation.
  \var{E} has three components, 1 (\typ{STR}): the operator name \var{op},
  2: first argument, 3: second argument.

  \item \kbd{"e\_TYPE2"}. Forbidden operation between two objects than cannot be
  typecast to a sensible common domain, because their types do not match up.
  (As in \kbd{Mod(1,2) + Pi}.)
  \var{E} has three components, 1 (\typ{STR}): the operator name \var{op},
  2: first argument, 3: second argument.

  \item \kbd{"e\_INV"}. Tried to invert a non-invertible object, which is not
  a \typ{INTMOD}. Indeed, in the latter case, we raise \kbd{e\_INTMOD} instead.
  \var{E} has no component.

  \item \kbd{"e\_MEM"}. A call to \tet{pari_malloc} or \tet{pari_realloc} failed.
  \var{E} has no component.

  \item \kbd{"e\_NEGVAL"}. An argument of function $s$ is a power series with
  negative valuation, which does not make sense. (As in \kbd{cos(1/x)}.)
  \var{E} has one component, 1 (\typ{STR}): the function name $s$.

  \item \kbd{"e\_SQRTN"}. Trying to compute an $n$-th root which does not
  exist. (As in \kbd{sqrt(Mod(-1,3))}.)
  \var{E} has no component.
