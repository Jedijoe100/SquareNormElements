Function: allocatemem
Section: programming/specific
C-Name: allocatemem0
Prototype: vDG
Help: allocatemem({s=0}): allocates a new stack of s bytes. doubles the
 stack if s is omitted
Doc: this very special operation
 allows the user to change the stack size \emph{after} initialization. $x$
 must be a non-negative integer. If $x \neq 0$, a new stack of size
 $16*\ceil{x/16}$ bytes is allocated, all the PARI data on the old stack is
 moved to the new one, and the old stack is discarded. If $x=0$, the size of
 the new stack is twice the size of the old one.
 
 Although it is a function, \kbd{allocatemem} cannot be used in loop-like
 constructs, or as part of a larger expression sequence, e.g 
 \kbd{allocatemem(); something\_else()}. The former attempt will raise an
 error; in the latter the rest of the sequence following \kbd{allocatemem()}
 will be silently discarded. The technical reason is that this routine
 moves the stack, so temporary objects created during the current expression
 evaluation will not be correct anymore. (In particular byte-compiled
 expressions, which are allocated on the stack.)
